
upstream tomcat {

server inst{{ ansible_default_ipv4.address[-1] | int + 1}}.bugoga.ga:8080;
  {% for host in range(HOST_COUNT | int) %}
   {% if hostvars[groups['all'][host]]['ansible_default_ipv4']['address'] != ansible_default_ipv4.address %}
server inst{{ hostvars[groups['all'][host]]['ansible_default_ipv4']['address'][-1] | int + 1 }}.bugoga.ga:8080 backup;
   {% endif %}
  {% endfor %}

}


server {

	root /var/www/front;
	index index.html index.htm index.nginx-debian.html;
	server_name inst{{ ansible_default_ipv4.address[-1] | int + 1}}.{{ DOMAIN_ROOT }};

	     location / {
		          try_files $uri $uri/ =404;
	     }

       location /.well-known/acme-challenge {
        root /var/www/letsencrypt;
        try_files $uri $uri/ =404;
        }



	     location  ^~ /Back {
		          proxy_http_version 1.1;
              proxy_pass http://tomcat;
		          proxy_set_header Origin "http://tomcat";
       }

}

server {

	root /var/www/front;
	index index.html index.htm index.nginx-debian.html;
	server_name {{ DOMAIN_ROOT }};

	     location / {
		          try_files $uri $uri/ =404;
	     }

       location /.well-known/acme-challenge {
        proxy_pass http://inst1.{{ DOMAIN_ROOT }};
        }



	     location  ^~ /Back {
		          proxy_http_version 1.1;
              proxy_pass http://tomcat;
		          proxy_set_header Origin "http://tomcat";
       }

}


server {
    if ($host = inst{{ ansible_default_ipv4.address[-1] | int + 1}}.{{ DOMAIN_ROOT }}) {
        return 301 https://$host$request_uri;
    }
        server_name inst{{ ansible_default_ipv4.address[-1] | int + 1}}.{{ DOMAIN_ROOT }};
    listen 80;
    return 404;


}



server {
    if ($host = {{ DOMAIN_ROOT }}) {
        return 301 https://$host$request_uri;
    }

        listen 80 default_server;
        listen [::]:80 default_server;

        server_name {{ DOMAIN_ROOT }};
    return 404;


}
