---

- hosts: all
  gather_facts: true
  become: true
  vars:
    DOMAIN_ROOT: bugoga.ga
    CERT_MAIL: myip127.0.0.0@gmail.com
    HOST_COUNT: "{{ groups['all'] | length }}"
  tasks:
    - name: Upgrade System
      apt:
        update_cache: yes

    - name: Install NGINX
      apt:
       name: nginx
       state: present

    - name: install letsencrypt
      apt: name=letsencrypt state=latest

    - name: create letsencrypt directory
      file: name=/var/www/letsencrypt state=directory

    - name: Add certbot repository
      apt_repository:
       repo: 'ppa:certbot/certbot'

       
    - name: Install Certbot's Nginx package
      apt:
       name: python-certbot-nginx
       state: present

    - name: Remove default nginx config
      file: name=/etc/nginx/sites-enabled/default state=absent
      file: name=/etc/nginx/sites-available/default state=absent


    - name: Template NGINX conf gnerator
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/nginx.conf

    - name: Generate site conf
      template:
        src: default3.j2
        dest: /etc/nginx/sites-enabled/default
#      when: ansible_default_ipv4.address[-1] == '0'
#
#    - name: Generate site conf
#      template:
#        src: default2.j2
#        dest: /etc/nginx/sites-enabled/default
#      when: ansible_default_ipv4.address != '172.31.0.10'
#
#    - name: Reload nginx
#      service: name=nginx state=restarted
#
#    - name: Create letsencrypt certificate
#      shell: letsencrypt certonly -n --webroot -w /var/www/letsencrypt -m {{ CERT_MAIL }} --agree-tos -d inst{{ ansible_default_ipv4.address[-1] | int + 1}}.{{ DOMAIN_ROOT }}
#      args:
#        creates: /etc/letsencrypt/live/inst{{ ansible_default_ipv4.address[-1] | int + 1}}.{{ DOMAIN_ROOT }}
#
#
#    - name: Create letsencrypt certificate
#      shell: letsencrypt certonly -n --webroot -w /var/www/letsencrypt -m {{ CERT_MAIL }} --agree-tos -d {{ DOMAIN_ROOT }}
#      args:
#        creates: /etc/letsencrypt/live/{{ DOMAIN_ROOT }}
#      when: ansible_default_ipv4.address == '172.31.0.10'
#
#    - name: Generate dhparams
#      shell: openssl dhparam -out /etc/nginx/dhparams.pem 2048
#      args:
#        creates: /etc/nginx/dhparams.pem
#
#    - name: Install nginx site for specified site
#      template:
#        src: nginx-le.j2
#        dest: /etc/nginx/sites-enabled/le


    - name: create letsencrypt directory
      copy:
        src: index.html
        dest: /var/www/front/

    - name: Reload nginx to activate specified site
      service: name=nginx state=restarted
