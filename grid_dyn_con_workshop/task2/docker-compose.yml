version: '3'
services:
     
  mysql-server:
    image: mysql:5.7
    container_name: mysql-server
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=petclinic
      - MYSQL_DATABASE=petclinic
    volumes:
      - "./conf.d:/etc/mysql/conf.d:ro"
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 5s
      retries: 24
    networks:
      - consultation


  petclinic:
    image: arey/springboot-petclinic:2.1.3
    container_name: petclinic
    volumes:
      - ./config:/config
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=mysql,prod
    entrypoint: ["java","-Djava.security.egd=file:/dev/./urandom","-Dspring.config.location=file:/config/application-mysql.properties","-jar","/petclinic.jar"]
    networks:
      - consultation


  consul-agent-0: &consul-agent
    image: consul:latest
    container_name: consul-agent-0
    networks:
      - consultation
    entrypoint: /bin/sh -c
    command: >
      "echo '{ \"Service\": { \"Name\": \"mysql\", \"Address\" : \"mysql-server\", \"Port\": 3306, \"check\": { \"id\": \"mysql\", \"name\": \"Check Petclinic Mysql health 3306\", \"tcp\": \"mysql-server:3306\", \"interval\": \"10s\", \"timeout\": \"1s\" } } }' >> /consul/config/mysql.json  
      && /usr/local/bin/docker-entrypoint.sh  agent -retry-join consul-server-bootstrap -client 0.0.0.0"
  
  consul-agent-1:
    <<: *consul-agent    
    container_name: consul-agent-1    
    command: >
      "echo '{ \"Service\": { \"Name\": \"petclinic\", \"Address\" : \"petclinic\", \"Port\": 8080, \"check\": { \"id\": \"petclinic\", \"name\": \"Check Petclinic service health 8080\", \"tcp\": \"petclinic:8080\", \"interval\": \"10s\", \"timeout\": \"1s\" } } } ' >> /consul/config/spring.json  
      && /usr/local/bin/docker-entrypoint.sh  agent -retry-join consul-server-bootstrap -client 0.0.0.0"


  consul-server-bootstrap:
    image: consul:latest
    container_name: consul-server
    networks:
      - consultation
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:8600"
      - "8600:8600/udp"
    entrypoint: /bin/sh -c  
    command: >
      "/usr/local/bin/docker-entrypoint.sh agent -server -bootstrap-expect 1 -ui -client 0.0.0.0 &&
      /usr/local/bin/docker-entrypoint.sh consul kv put service/mysql/datasource mysql &&
      /usr/local/bin/docker-entrypoint.sh consul kv put service/mysql/username petclinic &&
      /usr/local/bin/docker-entrypoint.sh consul kv put service/mysql/password petclinic &&
      /usr/local/bin/docker-entrypoint.sh consul kv put service/mysql/driver com.mysql.cj.jdbc.Driver"


networks:
  consultation:
